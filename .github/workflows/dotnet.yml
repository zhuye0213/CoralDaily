# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: 设置 .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: 还原依赖
      run: dotnet restore
    - name: 生成
      run: dotnet build --no-restore
    - name: 运行测试用例
      run: dotnet test --no-build --verbosity normal
    - name: 发布
      run: dotnet publish -c Release --property:PublishDir=${{env.DOTNET_ROOT}}/myapp
    - name: 上传文件
      uses: actions/upload-artifact@v3
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'

    steps:
    - name: 下载文件
      uses: actions/download-artifact@v3
      with:
        name: .net-app  
    - name: 部署到云主机
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i --delete"
        SOURCE: ""
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: "/opt/CoralDaily/"
        #EXCLUDE: "/dist/, /node_modules/"
        SCRIPT_AFTER: |          
          echo $RSYNC_STDOUT
          systemctl restart coraldaily
    - name: 发布完成
      run: echo 发布完成
